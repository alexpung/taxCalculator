name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      #----------------------------------------------
      # install poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # run pylint
      #----------------------------------------------
      - name: Analysing the code with pylint
        run: |
          poetry run pylint $(find -path "./.venv" -prune -o -name "*.py" -print | xargs)
      #----------------------------------------------
      # run tests with coverage pytest
      #----------------------------------------------
      - name: Analysing the code with pylint
        run: |
          poetry run coverage run -m pytest
